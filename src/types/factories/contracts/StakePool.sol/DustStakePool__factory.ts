/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DustStakePool,
  DustStakePoolInterface,
} from "../../../contracts/StakePool.sol/DustStakePool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakeToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_yieldToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_cooldownSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_unstakeWindow",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "Cooldown",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cooldown",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cooldownSeconds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "cooldowns",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTimeRewardApplicable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "notifyRewardAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "periodFinish",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unstakeWindow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userRewardPerTokenPaid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000600655600060075534801561001a57600080fd5b50604051611198380380611198833981016040819052610039916100a1565b600e80546001600160a01b03199081163317909155600080546001600160a01b03978816908316179055600d8054959096169416939093179093556005556003919091556004556100ef565b80516001600160a01b038116811461009c57600080fd5b919050565b600080600080600060a086880312156100b957600080fd5b6100c286610085565b94506100d060208701610085565b6040870151606088015160809098015196999198509695945092505050565b61109a806100fe6000396000f3fe608060405234801561001057600080fd5b506004361061018c5760003560e01c8063787a08a6116100e3578063b8221bc41161008c578063df136d6511610066578063df136d651461030e578063ebe2b12b14610317578063f851a4401461032057600080fd5b8063b8221bc4146102f4578063c8f33c91146102fd578063cd3daf9d1461030657600080fd5b806380faa57d116100bd57806380faa57d146102b95780638b876347146102c1578063a694fc3a146102e157600080fd5b8063787a08a61461029f57806378e97925146102a75780637b0a47ee146102b057600080fd5b80632e1a7d4d116101455780636314e8841161011f5780636314e8841461025a57806370a082311461026357806376d5de851461028c57600080fd5b80632e1a7d4d146102145780633d18b9121461022757806351ed6a301461022f57600080fd5b80630700037d116101765780630700037d146101d757806318160ddd146101f7578063246132f9146101ff57600080fd5b80628cc2621461019157806301320fe2146101b7575b600080fd5b6101a461019f366004610f06565b610333565b6040519081526020015b60405180910390f35b6101a46101c5366004610f06565b600c6020526000908152604090205481565b6101a46101e5366004610f06565b600b6020526000908152604090205481565b6001546101a4565b61021261020d366004610f2f565b6103b0565b005b610212610222366004610f51565b610590565b6102126107a7565b600054610242906001600160a01b031681565b6040516001600160a01b0390911681526020016101ae565b6101a460045481565b6101a4610271366004610f06565b6001600160a01b031660009081526002602052604090205490565b600d54610242906001600160a01b031681565b6102126108b7565b6101a460055481565b6101a460075481565b6101a461094e565b6101a46102cf366004610f06565b600a6020526000908152604090205481565b6102126102ef366004610f51565b610961565b6101a460035481565b6101a460085481565b6101a4610a97565b6101a460095481565b6101a460065481565b600e54610242906001600160a01b031681565b6001600160a01b0381166000908152600b6020908152604080832054600a909252822054670de0b6b3a764000090610369610a97565b6103739190610f80565b6001600160a01b0385166000908152600260205260409020546103969190610f97565b6103a09190610fb6565b6103aa9190610fd8565b92915050565b60006103ba610a97565b6009556103c561094e565b6008556001600160a01b0381161561040c576103e081610333565b6001600160a01b0382166000908152600b6020908152604080832093909355600954600a909152919020555b600e546001600160a01b0316331461046b5760405162461bcd60e51b815260206004820152600960248201527f4e6f742061646d696e000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600082116104bb5760405162461bcd60e51b815260206004820152600d60248201527f4475726174696f6e2069732030000000000000000000000000000000000000006044820152606401610462565b60055442111561056b5760065442106104e0576104d88284610fb6565b60075561051f565b6000426006546104f09190610f80565b90506000600754826105029190610f97565b90508361050f8287610fd8565b6105199190610fb6565b60075550505b426008819055610530908390610fd8565b6006556040518381527fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d9060200160405180910390a1505050565b6105758284610fb6565b6007556005546008819055610530908390610fd8565b505050565b33610599610a97565b6009556105a461094e565b6008556001600160a01b038116156105eb576105bf81610333565b6001600160a01b0382166000908152600b6020908152604080832093909355600954600a909152919020555b6005544210156106295760405162461bcd60e51b8152602060048201526009602482015268139bdd081cdd185c9d60ba1b6044820152606401610462565b600082116106795760405162461bcd60e51b815260206004820152601160248201527f43616e6e6f7420776974686472617720300000000000000000000000000000006044820152606401610462565b336000908152600c60205260409020546003546106969082610fd8565b42116106e45760405162461bcd60e51b815260206004820152600c60248201527f4e6f7420636f6f6c646f776e00000000000000000000000000000000000000006044820152606401610462565b6004546003546106f49083610fd8565b6106fe9190610fd8565b42111561074d5760405162461bcd60e51b815260206004820152601260248201527f5769746864726177616c206578706972656400000000000000000000000000006044820152606401610462565b61075683610afb565b336000818152600c602052604080822091909155517f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d59061079a9086815260200190565b60405180910390a2505050565b336107b0610a97565b6009556107bb61094e565b6008556001600160a01b03811615610802576107d681610333565b6001600160a01b0382166000908152600b6020908152604080832093909355600954600a909152919020555b6005544210156108405760405162461bcd60e51b8152602060048201526009602482015268139bdd081cdd185c9d60ba1b6044820152606401610462565b600061084b33610333565b905080156108b357336000818152600b6020526040812055600d5461087c916001600160a01b039091169083610b50565b60405181815233907fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486906020015b60405180910390a25b5050565b33600090815260026020526040812054116109145760405162461bcd60e51b815260206004820152601b60248201527f496e76616c69642062616c616e6365206f6e20636f6f6c646f776e00000000006044820152606401610462565b336000818152600c6020526040808220429055517ff52f50426b32362d3e6bb8cb36b7074756b224622def6352a59eac7f66ebe6e89190a2565b600061095c42600654610be0565b905090565b3361096a610a97565b60095561097561094e565b6008556001600160a01b038116156109bc5761099081610333565b6001600160a01b0382166000908152600b6020908152604080832093909355600954600a909152919020555b6005544210156109fa5760405162461bcd60e51b8152602060048201526009602482015268139bdd081cdd185c9d60ba1b6044820152606401610462565b60008211610a4a5760405162461bcd60e51b815260206004820152600e60248201527f43616e6e6f74207374616b6520300000000000000000000000000000000000006044820152606401610462565b610a5382610bf8565b336000818152600c602052604080822091909155517f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d906108aa9085815260200190565b6000610aa260015490565b610aad575060095490565b600154600754600854610abe61094e565b610ac89190610f80565b610ad29190610f97565b610ae490670de0b6b3a7640000610f97565b610aee9190610fb6565b60095461095c9190610fd8565b8060016000828254610b0d9190610f80565b90915550503360009081526002602052604081208054839290610b31908490610f80565b9091555050600054610b4d906001600160a01b03163383610b50565b50565b6040516001600160a01b03831660248201526044810182905261058b90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152610c4b565b6000818310610bef5781610bf1565b825b9392505050565b8060016000828254610c0a9190610fd8565b90915550503360009081526002602052604081208054839290610c2e908490610fd8565b9091555050600054610b4d906001600160a01b0316333084610d30565b6000610ca0826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610d6e9092919063ffffffff16565b80519091501561058b5780806020019051810190610cbe9190610ff0565b61058b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610462565b6040516001600160a01b0380851660248301528316604482015260648101829052610d689085906323b872dd60e01b90608401610b7c565b50505050565b6060610d7d8484600085610d85565b949350505050565b606082471015610dfd5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610462565b6001600160a01b0385163b610e545760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610462565b600080866001600160a01b03168587604051610e70919061103e565b60006040518083038185875af1925050503d8060008114610ead576040519150601f19603f3d011682016040523d82523d6000602084013e610eb2565b606091505b5091509150610ec2828286610ecd565b979650505050505050565b60608315610edc575081610bf1565b825115610eec5782518084602001fd5b8160405162461bcd60e51b8152600401610462919061105a565b600060208284031215610f1857600080fd5b81356001600160a01b0381168114610bf157600080fd5b60008060408385031215610f4257600080fd5b50508035926020909101359150565b600060208284031215610f6357600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610f9257610f92610f6a565b500390565b6000816000190483118215151615610fb157610fb1610f6a565b500290565b600082610fd357634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115610feb57610feb610f6a565b500190565b60006020828403121561100257600080fd5b81518015158114610bf157600080fd5b60005b8381101561102d578181015183820152602001611015565b83811115610d685750506000910152565b60008251611050818460208701611012565b9190910192915050565b6020815260008251806020840152611079816040850160208701611012565b601f01601f1916919091016040019291505056fea164736f6c6343000809000a";

type DustStakePoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DustStakePoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DustStakePool__factory extends ContractFactory {
  constructor(...args: DustStakePoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _stakeToken: string,
    _yieldToken: string,
    _startTime: BigNumberish,
    _cooldownSeconds: BigNumberish,
    _unstakeWindow: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DustStakePool> {
    return super.deploy(
      _stakeToken,
      _yieldToken,
      _startTime,
      _cooldownSeconds,
      _unstakeWindow,
      overrides || {}
    ) as Promise<DustStakePool>;
  }
  override getDeployTransaction(
    _stakeToken: string,
    _yieldToken: string,
    _startTime: BigNumberish,
    _cooldownSeconds: BigNumberish,
    _unstakeWindow: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _stakeToken,
      _yieldToken,
      _startTime,
      _cooldownSeconds,
      _unstakeWindow,
      overrides || {}
    );
  }
  override attach(address: string): DustStakePool {
    return super.attach(address) as DustStakePool;
  }
  override connect(signer: Signer): DustStakePool__factory {
    return super.connect(signer) as DustStakePool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DustStakePoolInterface {
    return new utils.Interface(_abi) as DustStakePoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DustStakePool {
    return new Contract(address, _abi, signerOrProvider) as DustStakePool;
  }
}
